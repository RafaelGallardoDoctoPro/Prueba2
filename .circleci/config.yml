
RafaelGallardoDoctoPro
keyboard_arrow_down
Updateskeyboard_arrow_down
Supportkeyboard_arrow_down

storage
assessment
library_add
group
Projects Add Projects RafaelGallardoDoctoPro/Prueba2
Set Up Project
CircleCI helps you ship better code, faster. To kick things off, you'll need to add a config.yml file to your project, and start building. After that, we'll start a new build for you each time someone pushes a new commit.

Select from the following options to generate a sample .yml for your project.

Operating System
 Linux macOS
Language
settings Clojuresettings Elixirsettings Gosettings Gradle (Java)settings Maven (Java)settings Nodesettings PHPsettings Pythonsettings Rubysettings Scalasettings Other
Request a language: 

Submit
Next Steps
You're almost there! We're going to walk you through setting up a configuration file, committing it, and turning on our listener so that CircleCI can test your commits.

Want to skip ahead? Jump right into our documentation, set up a .yml file, and kick off your build with the button below.

If you start building before you've added a config.yml file, this will start a project on CircleCI 1.0, which will no longer be supported after August 31, 2018. Add a project on CircleCI 2.0.

1.	
Create a folder named .circleci and add a fileconfig.yml (so that the filepath be in .circleci/config.yml).

2.	
Populate the config.yml with the contents of the sample .yml (shown below).


Copy To Clipboard

version: 2
jobs:
  build:
    docker:
      - image: debian:stretch
    steps:
      - checkout
      - run:
          name: Greeting
          command: echo Hello, world.
      - run:
          name: Print the Current Time
          command: date

3.	
Update the sample .yml to reflect your project's configuration.

4.	
Push this change up to GitHub.

5.	
Start building! This will launch your project on CircleCI and make our webhooks listen for updates to your work.

Start building
Sample .yml File
version: 2
jobs:
  build:
    docker:
      - image: debian:stretch
    steps:
      - checkout
      - run:
          name: Greeting
          command: echo Hello, world.
      - run:
          name: Print the Current Time
          command: date
